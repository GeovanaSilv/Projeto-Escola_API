{"ast":null,"code":"var _jsxFileName = \"/Users/u21430/escola/src/components/CrudCarometro/CrudCarometro.js\";\nimport React, { Component } from \"react\";\nimport axios from 'axios';\nimport './CrudCarometro.css';\nimport Main from '../template/Main';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst title = \"Carometro\";\nconst urlAPI = \"http://localhost:5278/api/Aluno\";\nconst urlAPICurso = \"http://localhost:5278/api/Curso\";\nconst initialState = {\n  aluno: {\n    id: 0,\n    ra: '',\n    nome: '',\n    codCurso: 0\n  },\n  lista: [],\n  listaCurso: []\n};\nexport default class CrudCarometro extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = { ...initialState\n    };\n  }\n\n  componentDidMount() {\n    axios(urlAPI).then(resp => {\n      this.setState({\n        lista: resp.data\n      });\n    });\n    axios(urlAPICurso).then(resp => {\n      this.setState({\n        listaCurso: resp.data\n      });\n    });\n  } //PARA ALUNOS \n\n\n  getListaAtualizadaAluno(aluno) {\n    let add = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    const lista = this.state.lista.filter(a => a.id !== aluno.id);\n    if (add) lista.unshift(aluno);\n    return lista;\n  } //PARA ALUNOS E CURSOS \n\n\n  atualizaCampo(evento) {\n    const aluno = { ...this.state.aluno\n    };\n    const curso = { ...this.state.curso\n    };\n    aluno[evento.target.name] = evento.target.value;\n    curso[evento.target.name] = evento.target.value;\n    this.setState({\n      aluno\n    });\n    this.setState({\n      curso\n    });\n  }\n\n  renderForm() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inclui-alunos\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Curso\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"codCurso\",\n        onChange: e => {\n          this.getListaAtualizadaAluno(e);\n        },\n        children: this.state.listaCurso.map(curso => /*#__PURE__*/_jsxDEV(\"option\", {\n          name: \"codCurso\",\n          value: curso.codCurso,\n          children: curso.nomeCurso\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 16\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Clipboard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Main, {\n      title: title,\n      children: this.renderForm()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"names":["React","Component","axios","Main","useEffect","useState","title","urlAPI","urlAPICurso","initialState","aluno","id","ra","nome","codCurso","lista","listaCurso","CrudCarometro","state","componentDidMount","then","resp","setState","data","getListaAtualizadaAluno","add","filter","a","unshift","atualizaCampo","evento","curso","target","name","value","renderForm","e","map","nomeCurso","render"],"sources":["/Users/u21430/escola/src/components/CrudCarometro/CrudCarometro.js"],"sourcesContent":["import React, {Component} from \"react\";\nimport axios from 'axios';\nimport './CrudCarometro.css';\nimport Main from '../template/Main';\n\nimport { useEffect, useState } from 'react';\n\nconst title =\"Carometro\";\n\nconst urlAPI = \"http://localhost:5278/api/Aluno\";\nconst urlAPICurso = \"http://localhost:5278/api/Curso\";\n\n\n\nconst initialState ={\n    aluno: {id:0,ra:'',nome:'',codCurso:0},\n    lista:[],\n    listaCurso:[]\n         \n}\nexport default class CrudCarometro extends Component{\n    state = {...initialState}\n    componentDidMount(){\n     axios(urlAPI).then(resp =>{\n         this.setState({lista: resp.data})\n     })\n     axios(urlAPICurso).then(resp=>{\n            this.setState({listaCurso:resp.data})\n     })\n    }\n        //PARA ALUNOS \n    getListaAtualizadaAluno(aluno, add = true, ){\n        const lista = this.state.lista.filter(a => a.id !== aluno.id);\n        if(add) lista.unshift(aluno);\n        return lista;\n       }\n\n       //PARA ALUNOS E CURSOS \n       atualizaCampo(evento){\n        const aluno  = {...this.state.aluno};\n        const curso ={...this.state.curso};\n    \n        aluno[evento.target.name]= evento.target.value;\n        curso[evento.target.name]= evento.target.value;\n    \n        this.setState({aluno});\n        this.setState({curso});\n       }\n\n    \n       renderForm(){\n        return(\n            <div  className=\"inclui-alunos\">\n               <label>Curso</label>\n                < select name = \"codCurso\" onChange={e=>{this.getListaAtualizadaAluno(e)}}>\n                    {this.state.listaCurso.map((curso)=>\n                   \n               <option name = \"codCurso\"\n                   value={curso.codCurso}\n               >\n                {curso.nomeCurso}\n                </option> \n                    )}\n                 </select>\n\n                  <Clipboard>\n                    </Clipboard>                  \n              \n                </div>\n              \n        \n        )}\n\n\n        render(){\n            return(\n            <Main title={title}>\n                {this.renderForm()}\n                </Main>\n            )\n        }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}