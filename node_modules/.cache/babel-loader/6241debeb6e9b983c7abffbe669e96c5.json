{"ast":null,"code":"import React, { Component } from \"react\";\nimport axios from 'axios';\nimport './CrudCurso.css';\nimport Main from '../template/Main';\nimport { resolveTo } from \"react-router/lib/router\";\nconst title = \"Cadastro de Curso\";\n/*const urlAPI =\"http://localhost:5278/api/Curso\";\n\nconst initialState={\n    curso:{nomeCurso:'',codCurso:0,periodo:''},\n    lista:[]\n}\n\nexport default function CrudCurso(){\nstate = {...initialState}\naxios(urlAPI).then(resp =>{\n    //this.setState({lista:resp.data})\n})\n}\nlimpar();{\n    this.setState({aluno : initialState.aluno});\n}\nsalvar();{\n    const  curso= this.state.curso;\n    curso.codCurso = Number(curso.codCurso);\n    const metodo = curso.id?'put':'post';\n    const url = curso.id ? `${urlAPI}/${curso.id}`:urlAPI;\n\n    axios[metodo](url,curso)\n    .then(resp =>{\n        const lista = this.getListaAtualizada(resp.data)\n      //  this.setState({curso:initialState.curso,lista})\n    })\n}\ngetListaAtualizada(curso, add = true);{\n   //  const lista = this.state.lista.filter(a =>a.id !== curso.id);\n   /* if(add) lista.unshift(curso);\n    return lista;*/\n\n/*}\natualizaCampo(evento);{\n    const curso = {...this.state.curso};\n     curso[evento.target.name]= evento.target.value;\n   \n   //   this.setState({curso});\n}\ncarregar(curso);{\n   // this.setState({curso})\n    const url = urlAPI + \"/\" + curso.id;\n    if(window.confirm(\"Confirma alteração \"+curso.id));\n    axios['PUT'](url,curso)\n    .then(resp =>{\n        const lista = this.getListaAtualizada(curso,false)\n        this.setState({curso:initialState.curso,lista})\n    })\n}\nremoveEventListener(curso);{\n    const url = urlAPI + \"/\"+curso.id;\n    if(window.confirm(\"Confirma remoção do curso:\"+curso.codCurso)){\n        console.log(\"entrou no confirm\");\n\n        axios['delete'](url,curso)\n        .then(resp=>{\n            const lista = this.getListaAtualizada(curso,false)\n            this.setState({curso:initialState.curso,lista})\n        })\n    }\n}\nrenderForm();{\n    return(\n       <div  className=\"inclui-container\">\n        \n\n           <label>Nome:</label>\n           <input\n            type=\"text\"\n            id = \"nomeCurso\"\n            placeholder=\"Nome do curso\"\n            className=\"form-input\"\n            name=\"nome\" \n            value={this.state.curso.nomeCurso}\n            onChange={e => this.atualizaCampo(e)}\n           />\n             <label>Periodo:</label>\n           <input\n            type=\"text\"\n            id = \"periodo\"\n            placeholder=\"Periodo co Curso\"\n            className=\"form-input\"\n            name=\"nome\" \n            value={this.state.curso.periodo}\n            onChange={e => this.atualizaCampo(e)}\n           />\n           <label>Código do Curso</label>\n           <input\n             type= \"number\"\n             id=\"codCurso\"\n             placeholder=\"0\"\n             className=\"form-input\"\n             name=\"codCurso\"\n             value={this.state.curso.codCurso}\n             onChange={e => this.atualizaCampo(e)}\n             />\n            <button className=\"btnSalvar\"\n            onClick={e => this.salvar(e)}\n            >Salvar \n            </button>\n            <button className=\"btnCancelar\"\n            onClick={e => this.limpar(e)}>\n                Cancelar\n            </button>\n             </div>\n    )\n}\nrenderTable(){\n    return(\n<div className=\"listagem\">\n   <table className=\"listaCursos\"id =\"tblListaCursos\">\n       <thead>\n           <tr className=\"cabecTabela\">\n      <th className=\"tabTituloNome\">Nome</th>\n      <th className=\"tabTituloCurso\">periodo</th>    \n      <th className=\"tabTituloCurso\">codCurso</th>    \n           </tr>\n       </thead>\n       <tbody>\n         {this.state.lista.map(\n             (curso) =>\n             <tr key={curso.id}>\n                 <td>{curso.nomeCurso}</td>\n                 <td>{curso.periodo}</td>\n                 <td>{curso.codCurso}</td>\n                  <td>\n                    <button onClick={() => this.carregar(curso)}>\n                        Alterar\n                    </button>\n                  </td>\n                  <td>\n                    <button onClick={() =>this.remover(curso)}>\n                        Remover\n                    </button>\n                  </td>\n\n             </tr>\n           )}\n       </tbody>\n     </table> \n    </div>\n    )\n}\nrender();{\n    return(\n    <Main title={title}>\n        {this.renderForm()}\n       {this.renderTable()}\n        </Main>\n    )\n}\n\n\n*/","map":{"version":3,"names":["React","Component","axios","Main","resolveTo","title"],"sources":["/Users/u21430/escola/src/components/CrudCurso/CrudCurso.js"],"sourcesContent":["import React, {Component} from \"react\";\nimport axios from 'axios';\nimport './CrudCurso.css';\nimport Main from '../template/Main';\nimport { resolveTo } from \"react-router/lib/router\";\n\nconst title =\"Cadastro de Curso\";\n\n/*const urlAPI =\"http://localhost:5278/api/Curso\";\n\nconst initialState={\n    curso:{nomeCurso:'',codCurso:0,periodo:''},\n    lista:[]\n}\n\nexport default function CrudCurso(){\nstate = {...initialState}\naxios(urlAPI).then(resp =>{\n    //this.setState({lista:resp.data})\n})\n}\nlimpar();{\n    this.setState({aluno : initialState.aluno});\n}\nsalvar();{\n    const  curso= this.state.curso;\n    curso.codCurso = Number(curso.codCurso);\n    const metodo = curso.id?'put':'post';\n    const url = curso.id ? `${urlAPI}/${curso.id}`:urlAPI;\n\n    axios[metodo](url,curso)\n    .then(resp =>{\n        const lista = this.getListaAtualizada(resp.data)\n      //  this.setState({curso:initialState.curso,lista})\n    })\n}\ngetListaAtualizada(curso, add = true);{\n   //  const lista = this.state.lista.filter(a =>a.id !== curso.id);\n   /* if(add) lista.unshift(curso);\n    return lista;*/\n/*}\natualizaCampo(evento);{\n    const curso = {...this.state.curso};\n     curso[evento.target.name]= evento.target.value;\n   \n   //   this.setState({curso});\n}\ncarregar(curso);{\n   // this.setState({curso})\n    const url = urlAPI + \"/\" + curso.id;\n    if(window.confirm(\"Confirma alteração \"+curso.id));\n    axios['PUT'](url,curso)\n    .then(resp =>{\n        const lista = this.getListaAtualizada(curso,false)\n        this.setState({curso:initialState.curso,lista})\n    })\n}\nremoveEventListener(curso);{\n    const url = urlAPI + \"/\"+curso.id;\n    if(window.confirm(\"Confirma remoção do curso:\"+curso.codCurso)){\n        console.log(\"entrou no confirm\");\n\n        axios['delete'](url,curso)\n        .then(resp=>{\n            const lista = this.getListaAtualizada(curso,false)\n            this.setState({curso:initialState.curso,lista})\n        })\n    }\n}\nrenderForm();{\n    return(\n       <div  className=\"inclui-container\">\n        \n\n           <label>Nome:</label>\n           <input\n            type=\"text\"\n            id = \"nomeCurso\"\n            placeholder=\"Nome do curso\"\n            className=\"form-input\"\n            name=\"nome\" \n            value={this.state.curso.nomeCurso}\n            onChange={e => this.atualizaCampo(e)}\n           />\n             <label>Periodo:</label>\n           <input\n            type=\"text\"\n            id = \"periodo\"\n            placeholder=\"Periodo co Curso\"\n            className=\"form-input\"\n            name=\"nome\" \n            value={this.state.curso.periodo}\n            onChange={e => this.atualizaCampo(e)}\n           />\n           <label>Código do Curso</label>\n           <input\n             type= \"number\"\n             id=\"codCurso\"\n             placeholder=\"0\"\n             className=\"form-input\"\n             name=\"codCurso\"\n             value={this.state.curso.codCurso}\n             onChange={e => this.atualizaCampo(e)}\n             />\n            <button className=\"btnSalvar\"\n            onClick={e => this.salvar(e)}\n            >Salvar \n            </button>\n            <button className=\"btnCancelar\"\n            onClick={e => this.limpar(e)}>\n                Cancelar\n            </button>\n             </div>\n    )\n}\nrenderTable(){\n    return(\n<div className=\"listagem\">\n   <table className=\"listaCursos\"id =\"tblListaCursos\">\n       <thead>\n           <tr className=\"cabecTabela\">\n      <th className=\"tabTituloNome\">Nome</th>\n      <th className=\"tabTituloCurso\">periodo</th>    \n      <th className=\"tabTituloCurso\">codCurso</th>    \n           </tr>\n       </thead>\n       <tbody>\n         {this.state.lista.map(\n             (curso) =>\n             <tr key={curso.id}>\n                 <td>{curso.nomeCurso}</td>\n                 <td>{curso.periodo}</td>\n                 <td>{curso.codCurso}</td>\n                  <td>\n                    <button onClick={() => this.carregar(curso)}>\n                        Alterar\n                    </button>\n                  </td>\n                  <td>\n                    <button onClick={() =>this.remover(curso)}>\n                        Remover\n                    </button>\n                  </td>\n\n             </tr>\n           )}\n       </tbody>\n     </table> \n    </div>\n    )\n}\nrender();{\n    return(\n    <Main title={title}>\n        {this.renderForm()}\n       {this.renderTable()}\n        </Main>\n    )\n}\n\n\n*/"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,SAASC,SAAT,QAA0B,yBAA1B;AAEA,MAAMC,KAAK,GAAE,mBAAb},"metadata":{},"sourceType":"module"}