{"ast":null,"code":"/*import axios from 'axios';\nimport './CrudCurso.css';\nimport Main from '../template/Main';\nimport { useState } from 'react';\n//import { resolveTo } from \"react-router/lib/router\";\n\nconst title =\"Cadastro de Curso\";\n\nconst urlAPI =\"http://localhost:5278/api/Curso\";\n\nconst initialState={\n    curso:{nomeCurso:'',codCurso:0,periodo:''},\n    lista:[]\n}\n\nexport default function CrudCurso(){\n\nconst[setCurso] = useState();\n\n   function limpar(){\n        setCurso({curso : initialState.curso});\n       }\n\n      function salvar(){\n        const curso = this.setCurso.curso;\n        curso.codCurso = Number(curso.codCurso);\n        const metodo = curso.id? 'put':'post';\n        const url = curso.id ? `${urlAPI}/${curso.id}`: urlAPI;\n     \n        axios[metodo](url,curso)\n        .then(resp =>{\n            const lista = this.getListaAtualizada(resp.data)\n          setCurso({curso:initialState.curso,lista})\n        })     \n    }\n function   getListaAtualizada(curso, add = true){\n        const lista = this.setCurso.lista.filter(a => a.id !== curso.id);\n        if(add) lista.unshift(curso);\n        return lista;\n       }\n\n\n    function   atualizaCampo(evento){\n        const curso  = {...this.setCurso.curso};\n    \n        curso[evento.target.name]= evento.target.value;\n    \n        this.setCurso({curso});\n       }\n\n\n     function  carregar(curso) {\n        this.setCurso({curso})\n           const url = urlAPI + \"/\" + curso.id;\n           if (window.confirm(\"Confirma alteração curso: \" + curso.codCurso)) {\n           console.log(\"entrou no confirm\");\n           axios['PUT'](url, curso)\n           .then(resp => {\n           const lista = this.getListaAtualizada(curso, false)\n           this.setCurso({ curso: initialState.curso, lista })\n       })\n    \n    }\n    this.atualizaCampo(curso);\n    }\n function remover(curso){\n    const url = urlAPI + \"/\"+ curso.id;\n    if(window.confirm(\"Confirma remoção do curso:\" + curso.nomeCurso)){\n        console.log(\"entrou no confirm\");\n\n        axios['delete'](url,curso)\n        .then(resp =>{\n            const lista = this.getListaAtualizada(curso,false)\n            this.setCurso({curso:initialState.curso,lista})\n        })\n    }\n  }\n   const renderForm = () =>{\n    return(\n        <div  className=\"inclui-container\">\n          <label> Nome: </label>\n          <input\n           type =\"text\"\n           id=\"nome\"\n            placeholder =\"Nome do Curso\"\n            className =\"form-input\"\n            name = \"nome\"\n            value={setCurso.curso.nomeCurso}\n            onChange={e =>this.atualizaCampo(e)}              \n            />\n\n           <label>Periodo:</label>\n           <input\n            type=\"text\"\n            id = \"periodo\"\n            placeholder=\"Periodo do curso\"\n            className=\"form-input\"\n            name=\"periodo\" \n            value={setCurso.curso.periodo}\n            onChange={e => this.atualizaCampo(e)}\n           />\n           <label>Código do Curso</label>\n           <input\n             type= \"number\"\n             id=\"codCurso\"\n             placeholder=\"0\"\n             className=\"form-input\"\n             name=\"codCurso\"\n             value={setCurso.curso.codCurso}\n             onChange={e => this.atualizaCampo(e)}\n             />\n            <button className=\"btnSalvar\"\n            onClick={e => this.salvar(e)}\n            >Salvar \n            </button>\n            <button className=\"btnCancelar\"\n            onClick={e => this.limpar(e)}>\n                Cancelar\n            </button>\n             </div>\n    )\n}\nconst renderTable =()  =>{\n    return(\n<div className=\"listagem\">\n   <table className=\"listaCurso\"id =\"tblListaCursos\">\n       <thead>\n           <tr className=\"cabecTabela\">\n      <th className=\"tabTituloNome\">Nome</th>\n      <th className=\"tabTituloPeriodo\">periodo</th>\n      <th className=\"tabTituloCurso\">Codigo Curso</th>                  \n           </tr>\n       </thead>\n       <tbody>\n         {this.setCurso.lista.map(\n             (curso) =>\n             <tr key={curso.id}>\n                 <td>{curso.nome}</td>\n                 <td>{curso.periodo}</td>\n                 <td>{curso.codCurso}</td>\n                  <td>\n                    <button onClick={() => this.carregar(curso)}>\n                        Alterar\n                    </button>\n                  </td>\n                  <td>\n                    <button onClick={() =>this.remover(curso)}>\n                        Remover\n                    </button>\n                  </td>\n\n             </tr>\n           )}\n       </tbody>\n     </table> \n    </div>\n    )\n}\n} \n  const render  = ()=>{\n    return(\n    <Main title={title}>\n        {this.renderForm()}\n       {this.renderTable()}\n        </Main>\n    )\n}\n*/","map":{"version":3,"names":[],"sources":["/Users/u21430/escola/src/components/CrudCurso/CrudCurso.js"],"sourcesContent":["\n/*import axios from 'axios';\nimport './CrudCurso.css';\nimport Main from '../template/Main';\nimport { useState } from 'react';\n//import { resolveTo } from \"react-router/lib/router\";\n\nconst title =\"Cadastro de Curso\";\n\nconst urlAPI =\"http://localhost:5278/api/Curso\";\n\nconst initialState={\n    curso:{nomeCurso:'',codCurso:0,periodo:''},\n    lista:[]\n}\n\nexport default function CrudCurso(){\n\nconst[setCurso] = useState();\n\n   function limpar(){\n        setCurso({curso : initialState.curso});\n       }\n\n      function salvar(){\n        const curso = this.setCurso.curso;\n        curso.codCurso = Number(curso.codCurso);\n        const metodo = curso.id? 'put':'post';\n        const url = curso.id ? `${urlAPI}/${curso.id}`: urlAPI;\n     \n        axios[metodo](url,curso)\n        .then(resp =>{\n            const lista = this.getListaAtualizada(resp.data)\n          setCurso({curso:initialState.curso,lista})\n        })     \n    }\n function   getListaAtualizada(curso, add = true){\n        const lista = this.setCurso.lista.filter(a => a.id !== curso.id);\n        if(add) lista.unshift(curso);\n        return lista;\n       }\n\n\n    function   atualizaCampo(evento){\n        const curso  = {...this.setCurso.curso};\n    \n        curso[evento.target.name]= evento.target.value;\n    \n        this.setCurso({curso});\n       }\n\n\n     function  carregar(curso) {\n        this.setCurso({curso})\n           const url = urlAPI + \"/\" + curso.id;\n           if (window.confirm(\"Confirma alteração curso: \" + curso.codCurso)) {\n           console.log(\"entrou no confirm\");\n           axios['PUT'](url, curso)\n           .then(resp => {\n           const lista = this.getListaAtualizada(curso, false)\n           this.setCurso({ curso: initialState.curso, lista })\n       })\n    \n    }\n    this.atualizaCampo(curso);\n    }\n function remover(curso){\n    const url = urlAPI + \"/\"+ curso.id;\n    if(window.confirm(\"Confirma remoção do curso:\" + curso.nomeCurso)){\n        console.log(\"entrou no confirm\");\n\n        axios['delete'](url,curso)\n        .then(resp =>{\n            const lista = this.getListaAtualizada(curso,false)\n            this.setCurso({curso:initialState.curso,lista})\n        })\n    }\n  }\n   const renderForm = () =>{\n    return(\n        <div  className=\"inclui-container\">\n          <label> Nome: </label>\n          <input\n           type =\"text\"\n           id=\"nome\"\n            placeholder =\"Nome do Curso\"\n            className =\"form-input\"\n            name = \"nome\"\n            value={setCurso.curso.nomeCurso}\n            onChange={e =>this.atualizaCampo(e)}              \n            />\n\n           <label>Periodo:</label>\n           <input\n            type=\"text\"\n            id = \"periodo\"\n            placeholder=\"Periodo do curso\"\n            className=\"form-input\"\n            name=\"periodo\" \n            value={setCurso.curso.periodo}\n            onChange={e => this.atualizaCampo(e)}\n           />\n           <label>Código do Curso</label>\n           <input\n             type= \"number\"\n             id=\"codCurso\"\n             placeholder=\"0\"\n             className=\"form-input\"\n             name=\"codCurso\"\n             value={setCurso.curso.codCurso}\n             onChange={e => this.atualizaCampo(e)}\n             />\n            <button className=\"btnSalvar\"\n            onClick={e => this.salvar(e)}\n            >Salvar \n            </button>\n            <button className=\"btnCancelar\"\n            onClick={e => this.limpar(e)}>\n                Cancelar\n            </button>\n             </div>\n    )\n}\nconst renderTable =()  =>{\n    return(\n<div className=\"listagem\">\n   <table className=\"listaCurso\"id =\"tblListaCursos\">\n       <thead>\n           <tr className=\"cabecTabela\">\n      <th className=\"tabTituloNome\">Nome</th>\n      <th className=\"tabTituloPeriodo\">periodo</th>\n      <th className=\"tabTituloCurso\">Codigo Curso</th>                  \n           </tr>\n       </thead>\n       <tbody>\n         {this.setCurso.lista.map(\n             (curso) =>\n             <tr key={curso.id}>\n                 <td>{curso.nome}</td>\n                 <td>{curso.periodo}</td>\n                 <td>{curso.codCurso}</td>\n                  <td>\n                    <button onClick={() => this.carregar(curso)}>\n                        Alterar\n                    </button>\n                  </td>\n                  <td>\n                    <button onClick={() =>this.remover(curso)}>\n                        Remover\n                    </button>\n                  </td>\n\n             </tr>\n           )}\n       </tbody>\n     </table> \n    </div>\n    )\n}\n} \n  const render  = ()=>{\n    return(\n    <Main title={title}>\n        {this.renderForm()}\n       {this.renderTable()}\n        </Main>\n    )\n}\n*/"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}