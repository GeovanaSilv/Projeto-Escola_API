{"ast":null,"code":"import axios from 'axios';\nimport './CrudCurso.css';\nimport Main from '../template/Main'; //import { resolveTo } from \"react-router/lib/router\";\n\nconst title = \"Cadastro de Curso\";\nconst urlAPI = \"http://localhost:5278/api/Curso\";\nconst initialState = {\n  curso: {\n    nomeCurso: '',\n    codCurso: 0,\n    periodo: ''\n  },\n  lista: []\n};\nexport default function CrudCurso() {\n  const [setCurso] = use;\n\n  function limpar() {\n    this.setState({\n      aluno: initialState.aluno\n    });\n  }\n\n  function salvar() {\n    const curso = this.state.curso;\n    curso.codCurso = Number(curso.codCurso);\n    const metodo = curso.id ? 'put' : 'post';\n    const url = curso.id ? `${urlAPI}/${curso.id}` : urlAPI;\n    axios[metodo](url, curso).then(resp => {\n      const lista = this.getListaAtualizada(resp.data);\n      this.setState({\n        curso: initialState.curso,\n        lista\n      });\n    });\n  }\n}\n_c = CrudCurso;\n\nvar _c;\n\n$RefreshReg$(_c, \"CrudCurso\");","map":{"version":3,"names":["axios","Main","title","urlAPI","initialState","curso","nomeCurso","codCurso","periodo","lista","CrudCurso","setCurso","use","limpar","setState","aluno","salvar","state","Number","metodo","id","url","then","resp","getListaAtualizada","data"],"sources":["/Users/u21430/escola/src/components/CrudCurso/CrudCurso.js"],"sourcesContent":["\nimport axios from 'axios';\nimport './CrudCurso.css';\nimport Main from '../template/Main';\n//import { resolveTo } from \"react-router/lib/router\";\n\nconst title =\"Cadastro de Curso\";\n\nconst urlAPI =\"http://localhost:5278/api/Curso\";\n\nconst initialState={\n    curso:{nomeCurso:'',codCurso:0,periodo:''},\n    lista:[]\n}\n\nexport default function CrudCurso(){\n\nconst[setCurso] = use\n\n   function limpar(){\n        this.setState({aluno : initialState.aluno});\n       }\n\n      function salvar(){\n        const curso = this.state.curso;\n        curso.codCurso = Number(curso.codCurso);\n        const metodo = curso.id? 'put':'post';\n        const url = curso.id ? `${urlAPI}/${curso.id}`: urlAPI;\n     \n        axios[metodo](url,curso)\n        .then(resp =>{\n            const lista = this.getListaAtualizada(resp.data)\n            this.setState({curso:initialState.curso,lista})\n        })     \n    \n    }\n\n}"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;AACA,OAAOC,IAAP,MAAiB,kBAAjB,C,CACA;;AAEA,MAAMC,KAAK,GAAE,mBAAb;AAEA,MAAMC,MAAM,GAAE,iCAAd;AAEA,MAAMC,YAAY,GAAC;EACfC,KAAK,EAAC;IAACC,SAAS,EAAC,EAAX;IAAcC,QAAQ,EAAC,CAAvB;IAAyBC,OAAO,EAAC;EAAjC,CADS;EAEfC,KAAK,EAAC;AAFS,CAAnB;AAKA,eAAe,SAASC,SAAT,GAAoB;EAEnC,MAAK,CAACC,QAAD,IAAaC,GAAlB;;EAEG,SAASC,MAAT,GAAiB;IACZ,KAAKC,QAAL,CAAc;MAACC,KAAK,EAAGX,YAAY,CAACW;IAAtB,CAAd;EACA;;EAEF,SAASC,MAAT,GAAiB;IACf,MAAMX,KAAK,GAAG,KAAKY,KAAL,CAAWZ,KAAzB;IACAA,KAAK,CAACE,QAAN,GAAiBW,MAAM,CAACb,KAAK,CAACE,QAAP,CAAvB;IACA,MAAMY,MAAM,GAAGd,KAAK,CAACe,EAAN,GAAU,KAAV,GAAgB,MAA/B;IACA,MAAMC,GAAG,GAAGhB,KAAK,CAACe,EAAN,GAAY,GAAEjB,MAAO,IAAGE,KAAK,CAACe,EAAG,EAAjC,GAAoCjB,MAAhD;IAEAH,KAAK,CAACmB,MAAD,CAAL,CAAcE,GAAd,EAAkBhB,KAAlB,EACCiB,IADD,CACMC,IAAI,IAAG;MACT,MAAMd,KAAK,GAAG,KAAKe,kBAAL,CAAwBD,IAAI,CAACE,IAA7B,CAAd;MACA,KAAKX,QAAL,CAAc;QAACT,KAAK,EAACD,YAAY,CAACC,KAApB;QAA0BI;MAA1B,CAAd;IACH,CAJD;EAMH;AAEJ;KAtBuBC,S"},"metadata":{},"sourceType":"module"}